<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
	<title>Andre Fontenele</title>
	<link>http://localhost:1313/categories/</link>
	<description>Recent content in Categories on Andre Fontenele</description>
	<generator>Hugo -- gohugo.io</generator>
	<language>en-us</language>
    
        <atom:link href="http://localhost:1313/categories/index.xml" rel="self" type="application/rss+xml" />
	
	
	<item>
		<title>First Blog</title>
		<link>http://localhost:1313/blog/first_blog/</link>
		<pubDate>Tue, 10 Jun 2025 15:14:27 -0400</pubDate>
		
		<guid>http://localhost:1313/blog/first_blog/</guid>
		<description>&lt;p&gt;This is my first blog post. It is purely for testing.&lt;/p&gt;
&lt;h2 id=&#34;heading&#34;&gt;Heading&lt;/h2&gt;
&lt;p&gt;italics&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bold&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;bold italics&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;bold italics&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;underline&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;underline italics&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;underline italics&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;strikethrough&lt;/del&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-strikethrough&#34; data-lang=&#34;strikethrough&#34;&gt;
~~~~strikethrough italics~~~~

[link](https://example.com)

![image](https://example.com/image.png)

&amp;gt; quote

&amp;gt; quote
&amp;gt;
&amp;gt; quote
&amp;gt;&amp;gt; quote
&amp;gt;&amp;gt;&amp;gt; quote
&amp;gt;&amp;gt;&amp;gt;&amp;gt; quote

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/0RKpf3rK57I?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;


1.
#### Subsubheading

##### Subsubsubheading

###### Subsubsubsubheading

###### Subsubsubsubheading

##### Subsubsubheading

#### Subsubheading

### Subheading

# Heading

## Heading

### Subheading
&lt;/code&gt;&lt;/pre&gt;</description>
	</item>
	
	<item>
		<title>Resume</title>
		<link>http://localhost:1313/resume/</link>
		<pubDate>Tue, 10 Jun 2025 15:11:44 -0400</pubDate>
		
		<guid>http://localhost:1313/resume/</guid>
		<description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;h2 id=&#34;areas-of-expertise&#34;&gt;Areas of Expertise&lt;/h2&gt;
&lt;p&gt;Backend Web-Dev,
Software Engineering,
Data Analytics,
Data Science&lt;/p&gt;
&lt;h2 id=&#34;about-me&#34;&gt;About Me&lt;/h2&gt;
&lt;p&gt;I started programming somewhere around in 2019, mostly out of a desire to replicate what was at the time, the coolest technology on the market: AI Voice Assistants. I picked up some basic python, and got to work; writing long chains of if-statements to replicate the functionality I saw in Alexa and Google Home. My parents noticed this and encouraged me in it so that by the next year I started my first college class towards a Bachelors in Data Science.&lt;/p&gt;
&lt;p&gt;I finished that degree this June, having now matured through my passion for code into a smart and well-rounded programmer. Now, I am looking for a job in the software development space where I can begin to specialize by providing value to a team of excellent programmers, learning under their leadership, and programming &lt;em&gt;like a madman&lt;/em&gt; full-time.&lt;/p&gt;
&lt;h2 id=&#34;credentials&#34;&gt;Credentials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Graduated TESU with a B.S. in Data Science (3.85 GPA)&lt;/li&gt;
&lt;li&gt;Completed courses on SQL and Python from Boot.dev (level 40 Scholar)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;work-experience&#34;&gt;Work Experience&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GCP Investments&lt;/strong&gt;, Remote - Software Engineer&lt;br&gt;
&lt;em&gt;(April 2025 - Present)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Refactor Rust binary and network parsing code to be more robust and maintainable
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Academic Center for Enrichment&lt;/strong&gt;, Middlesex Community College - Peer Tutor &lt;br&gt;
&lt;em&gt;(August 2022 - May 2024)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Tutor college students in various mathematical disciplines from Calculus II to Statistics.
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AEOP GEMS&lt;/strong&gt;, Natick Soldier Systems Center - Assistant Near Peer Mentor&lt;br&gt;
&lt;em&gt;(June 2022 - August 2022)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mentor teens and pre-teens working on STEM projects in Army Research Labs
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1 id=&#34;skills&#34;&gt;Skills&lt;/h1&gt;
&lt;h3 id=&#34;hard-skills&#34;&gt;Hard Skills&lt;/h3&gt;
&lt;h5 id=&#34;note-every-line-before-concepts-and-processes-is-ordered-from-highest-proficiencyfamiliarity-to-lowest-some-wrong-assumptions-to-make-about-the-later-items-would-be-that-i-find-them-inherently-confusing-or-that-i-rarely-use-them-for-example-i-know-much-more-java-than-bash-but-bash-is-both-less-complex-and-more-commonly-used-than-java-because-of-its-place-as-a-scripting-language&#34;&gt;Note: Every line before &amp;ldquo;Concepts and Processes&amp;rdquo; is ordered from highest proficiency/familiarity to lowest. Some wrong assumptions to make about the later items would be that I find them inherently confusing or that I rarely use them. For example, I know much more Java than Bash, but Bash is both less complex and more commonly used than Java, because of it&amp;rsquo;s place as a scripting language.&lt;br&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Technologies&lt;/strong&gt;: Git, Github, Linux, AWS, Nix&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Languages&lt;/strong&gt;: Python, Rust, SQL, C, Go, Java, Bash, Javascript/React&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libraries&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Python: Sci-kit Learn, Pandas/Polars, Selenium, Keras, Flask&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Go: Templ, SqlC, Echo&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concepts and Processes&lt;/strong&gt;: Design Patterns, HTTP and Networking, Cryptographic Encryption, Unit Testing/TDD, Shape Up Project Management&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;soft-skills&#34;&gt;Soft Skills&lt;/h3&gt;
&lt;h4 id=&#34;learning&#34;&gt;Learning&lt;/h4&gt;
&lt;p&gt;One of my greatest skills is the ability to learn deeply at a fast pace. When I encounter a new API, for example, one of the first things I naturally do is wonder how it&amp;rsquo;s implemented under the hood. I enjoy the oportunity to, whenever I can, build tools from scratch rather than just importing them. Not that I always so far as to re-write the whole tool, but the confidence to know it can be done, and the experience to guess how is a great foundation for learning and writing good code with that tool.&lt;/p&gt;
&lt;h4 id=&#34;presenting&#34;&gt;Presenting&lt;/h4&gt;
&lt;p&gt;I learned public speaking in High-school, where I took classes from a local pastor and competed in the National Christian Forensics and Communications Association (NCFCA). I competed in the NCFCA in Speech for ~2-3 years and Lincoln-Douglas debate for 1 year.&lt;/p&gt;
&lt;h1 id=&#34;projects&#34;&gt;Projects&lt;/h1&gt;
&lt;h3 id=&#34;co-op-database&#34;&gt;Co-op Database&lt;/h3&gt;
&lt;p&gt;The Co-op database is a project I started working on with the goal of replacing the nightmare of an Excel sheet my local co-op was using to keep track of students, families, classes, teachers, registrations, payments, and more.&lt;/p&gt;
&lt;p&gt;This project was also my first introduction to web development, and I&amp;rsquo;ve learned a lot over the it&amp;rsquo;s many re-writes. My most recent version (shown below), includes a hand-rolled authentication and primitive authorization system. I used constant-time hash-checking, and were proper hashing and salting. I also implemented protections against CSRF (form-implemented), XSS, SQL-injection, and brute-force attacks. You only see the Classes table here, but I also designed a database schema for the other parts.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/mwbyCCorNGU?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h3 id=&#34;tic-tac-toe-ai&#34;&gt;Tic-tac-toe AI&lt;/h3&gt;
&lt;p&gt;This is a fun project I like to build to learn the basic syntax of a new language. It&amp;rsquo;s a simple search algorithm (minimax) that can be used to play simple games.&lt;/p&gt;
&lt;p&gt;I also have a similar project which plays mancala with a more advanced version this algorithm. That one is written in Rust and also has the added difficulty of being a multithreaded incomplete search, requiring depth-limiting game tree calculations.&lt;/p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/Rx5F_YPo7N0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h3 id=&#34;posix-http-server-wip&#34;&gt;POSIX HTTP Server (WIP)&lt;/h3&gt;
&lt;p&gt;The goal of this project is to build a basic multithreaded HTTP server in C using just POSIX (techncially glibc) functionality. To non-technical people this will sound no different from any other website, but developers know that the self-inflicted handicap of using only POSIX C is a huge deal. It requires re-implementation some key functionality (the HTTP protocol) that developers use to facilitate web communcation in their code.&lt;/p&gt;
&lt;p&gt;After this project is working (at least with basic MIME types), I plan on building a simple and lightweight key-value store in C, which can then be used in combination with the server to create a full-stack app in Pure POSIX C/C++ (and DataStar/JS).&lt;/p&gt;
&lt;h3 id=&#34;basic-ssh-dns-esque&#34;&gt;Basic SSH DNS-esque&lt;/h3&gt;
&lt;p&gt;This one is a developer tool for people who have many computers they want to SSH into, but don&amp;rsquo;t want to have to deal with changing IP addresses and keeping a proper DNS. It is a simple two-part system (client and server) which uses an S3 bucket as a SSOT to keep track of changing ip addresses between servers and clients.&lt;/p&gt;
</description>
	</item>
	
	<item>
		<title>About</title>
		<link>http://localhost:1313/about/</link>
		<pubDate>Tue, 10 Jun 2025 15:04:49 -0400</pubDate>
		
		<guid>http://localhost:1313/about/</guid>
		<description>&lt;p&gt;Here is some content. This is all in Markdown.&lt;/p&gt;
&lt;h2 id=&#34;my-name-is-andre-fontenele&#34;&gt;My name is Andre Fontenele&lt;/h2&gt;
</description>
	</item>
	
	</channel>
</rss>
